"""Replace companies table with quickbooks_config for single-tenant architecture

Revision ID: c4cc04dcbdab
Revises: a8fc0df23aad
Create Date: 2025-08-18 14:55:57.828079

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'c4cc04dcbdab'
down_revision: Union[str, Sequence[str], None] = 'a8fc0df23aad'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # First, remove the foreign key constraint and company_id column from quickbooks_audit_logs
    """
    with op.batch_alter_table('quickbooks_audit_logs', schema=None) as batch_op:
        batch_op.drop_column('company_id')

    # Create the new quickbooks_config table
    op.create_table('quickbooks_config',
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('authorization_code', sa.Text(), nullable=True),
    sa.Column('realm_id', sa.String(length=50), nullable=True),
    sa.Column('connected_at', sa.DateTime(), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('configuration', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )

    # Drop the companies table
    op.drop_table('companies')

    # ### end Alembic commands ###
    """
    pass


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    """
    with op.batch_alter_table('quickbooks_audit_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('company_id', sa.INTEGER(), nullable=False))
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'])

    op.create_table('companies',
    sa.Column('company_name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('database_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('quickbooks_access_token', sa.TEXT(), nullable=True),
    sa.Column('quickbooks_refresh_token', sa.TEXT(), nullable=True),
    sa.Column('quickbooks_authorization_code', sa.TEXT(), nullable=True),
    sa.Column('quickbooks_realm_id', sa.VARCHAR(length=50), nullable=True),
    sa.Column('quickbooks_connected_at', sa.DATETIME(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('configuration', sqlite.JSON(), nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('quickbooks_config')
    # ### end Alembic commands ###
    """
    pass
